{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./reducers/rootReducer\";\n\n// ✅ Load userInfo from localStorage (if present)\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\n\n// ✅ Provide it as initial state to the store\nconst preloadedState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst store = configureStore({\n  reducer: rootReducer,\n  preloadedState\n});\nexport default store;","map":{"version":3,"names":["configureStore","rootReducer","userInfoFromStorage","localStorage","getItem","JSON","parse","preloadedState","userLogin","userInfo","store","reducer"],"sources":["D:/Sachin/Project/E-Commerce Project/frontend/src/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\n// ✅ Load userInfo from localStorage (if present)\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\n// ✅ Provide it as initial state to the store\r\nconst preloadedState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  preloadedState,  \r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,wBAAwB;;AAEhD;AACA,MAAMC,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;;AAER;AACA,MAAMG,cAAc,GAAG;EACrBC,SAAS,EAAE;IAAEC,QAAQ,EAAEP;EAAoB;AAC7C,CAAC;AAED,MAAMQ,KAAK,GAAGV,cAAc,CAAC;EAC3BW,OAAO,EAAEV,WAAW;EACpBM;AACF,CAAC,CAAC;AAEF,eAAeG,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}