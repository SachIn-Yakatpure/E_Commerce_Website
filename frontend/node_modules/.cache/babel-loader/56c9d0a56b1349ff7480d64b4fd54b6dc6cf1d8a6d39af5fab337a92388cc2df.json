{"ast":null,"code":"const savedCartState = JSON.parse(localStorage.getItem('cartState'));\nconst initialState = savedCartState || {\n  cartItems: [],\n  cartCounter: 0,\n  totalPrice: 0,\n  deliverCharges: 50,\n  taxes: 0,\n  grandTotal: 0\n};\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      {\n        const existIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\n        if (existIndex !== -1) {\n          const updatedCartItems = state.cartItems.map((item, index) => {\n            if (index === existIndex) {\n              return {\n                ...item,\n                quantity: item.quantity + 1,\n                total_item_price: (item.quantity + 1) * item.price\n              };\n            }\n            return item;\n          });\n          const updatedState = {\n            ...state,\n            cartItems: updatedCartItems,\n            cartCounter: state.cartCounter + 1,\n            totalPrice: state.totalPrice + action.payload.price,\n            taxes: (state.totalPrice + action.payload.price) * 0.18,\n            grandTotal: state.totalPrice + state.taxes + action.payload.price\n          };\n          localStorage.setItem('cartState', JSON.stringify(updatedState));\n          return updatedState;\n        } else {\n          const updatedState = {\n            ...state,\n            cartItems: [...state.cartItems, {\n              ...action.payload,\n              quantity: 1,\n              total_item_price: action.payload.price\n            }],\n            cartCounter: state.cartCounter + 1,\n            totalPrice: state.totalPrice + action.payload.price,\n            taxes: (state.totalPrice + action.payload.price) * 0.18,\n            grandTotal: state.totalPrice + state.taxes + action.payload.price\n          };\n          localStorage.setItem('cartState', JSON.stringify(updatedState));\n          return updatedState;\n        }\n      }\n    default:\n      return state;\n    case 'INCREMENT_CART_COUNTER':\n      {\n        const updatedCartItems = state.cartItems.map(item => {\n          if (item.id === action.payload) {\n            const newQty = item.quantity + 1;\n            return {\n              ...item,\n              quantity: newQty,\n              total_item_price: newQty * item.price\n            };\n          }\n          return item;\n        });\n        const newTotalPrice = updatedCartItems.reduce((acc, item) => acc + item.total_item_price, 0);\n        const newTaxes = newTotalPrice * 0.18;\n        const newGrandTotal = newTotalPrice + newTaxes + state.deliverCharges;\n        return {\n          ...state,\n          cartItems: updatedCartItems,\n          totalPrice: newTotalPrice,\n          taxes: newTaxes,\n          grandTotal: newGrandTotal\n        };\n      }\n    case 'DECREMENT_CART_COUNTER':\n      {\n        const updatedCartItems = state.cartItems.map(item => {\n          if (item.id === action.payload && item.quantity > 1) {\n            const newQty = item.quantity - 1;\n            return {\n              ...item,\n              quantity: newQty,\n              total_item_price: newQty * item.price\n            };\n          }\n          return item;\n        });\n        const newTotalPrice = updatedCartItems.reduce((acc, item) => acc + item.total_item_price, 0);\n        const newTaxes = newTotalPrice * 0.18;\n        const newGrandTotal = newTotalPrice + newTaxes + state.deliverCharges;\n        return {\n          ...state,\n          cartItems: updatedCartItems,\n          totalPrice: newTotalPrice,\n          taxes: newTaxes,\n          grandTotal: newGrandTotal\n        };\n      }\n    // ====\n    case 'LOAD_CART_FROM_DB':\n      return {\n        ...action.payload\n      };\n  }\n};\nexport default cartReducer;","map":{"version":3,"names":["savedCartState","JSON","parse","localStorage","getItem","initialState","cartItems","cartCounter","totalPrice","deliverCharges","taxes","grandTotal","cartReducer","state","action","type","existIndex","findIndex","item","id","payload","updatedCartItems","map","index","quantity","total_item_price","price","updatedState","setItem","stringify","newQty","newTotalPrice","reduce","acc","newTaxes","newGrandTotal"],"sources":["D:/Sachin/Project/E-Commerce Project/frontend/src/reducers/cartReducer.js"],"sourcesContent":["\r\n\r\nconst savedCartState = JSON.parse(localStorage.getItem('cartState'));\r\n\r\nconst initialState = savedCartState || {\r\n  cartItems: [],\r\n  cartCounter: 0,\r\n  totalPrice: 0,\r\n  deliverCharges: 50,\r\n  taxes: 0,\r\n  grandTotal: 0,\r\n};\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART': {\r\n      const existIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\r\n\r\n      if (existIndex !== -1) {\r\n        const updatedCartItems = state.cartItems.map((item, index) => {\r\n          if (index === existIndex) {\r\n            return {\r\n              ...item,\r\n              quantity: item.quantity + 1,\r\n              total_item_price: (item.quantity + 1) * item.price,\r\n            };\r\n          }\r\n          return item;\r\n        });\r\n\r\n        const updatedState = {\r\n          ...state,\r\n          cartItems: updatedCartItems,\r\n          cartCounter: state.cartCounter + 1,\r\n          totalPrice: state.totalPrice + action.payload.price,\r\n          taxes: (state.totalPrice + action.payload.price) * 0.18,\r\n          grandTotal: state.totalPrice + state.taxes + action.payload.price,\r\n        };\r\n\r\n        localStorage.setItem('cartState', JSON.stringify(updatedState));\r\n        return updatedState;\r\n      } else {\r\n        const updatedState = {\r\n          ...state,\r\n          cartItems: [\r\n            ...state.cartItems,\r\n            { ...action.payload, quantity: 1, total_item_price: action.payload.price },\r\n          ],\r\n          cartCounter: state.cartCounter + 1,\r\n          totalPrice: state.totalPrice + action.payload.price,\r\n          taxes: (state.totalPrice + action.payload.price) * 0.18,\r\n          grandTotal: state.totalPrice + state.taxes + action.payload.price,\r\n        };\r\n\r\n        localStorage.setItem('cartState', JSON.stringify(updatedState));\r\n        return updatedState;\r\n      }\r\n    }\r\n\r\n\r\n    default:\r\n      return state;\r\n  \r\n\r\n  case 'INCREMENT_CART_COUNTER':{\r\n    const updatedCartItems = state.cartItems.map(item => {\r\n        if (item.id === action.payload) {\r\n            const newQty = item.quantity + 1;\r\n            return {\r\n                ...item,\r\n                quantity: newQty,\r\n                total_item_price: newQty * item.price\r\n            };\r\n        }\r\n        return item;\r\n    });\r\n    const newTotalPrice = updatedCartItems.reduce((acc, item) => acc + item.total_item_price, 0);\r\n    const newTaxes = newTotalPrice * 0.18;\r\n    const newGrandTotal = newTotalPrice + newTaxes + state.deliverCharges;\r\n\r\n    return {\r\n        ...state,\r\n        cartItems: updatedCartItems,\r\n        totalPrice: newTotalPrice,\r\n        taxes: newTaxes,\r\n        grandTotal: newGrandTotal,\r\n    };\r\n}\r\n\r\n        case 'DECREMENT_CART_COUNTER': {\r\n            const updatedCartItems = state.cartItems.map(item => {\r\n              if (item.id === action.payload && item.quantity > 1) {\r\n                const newQty = item.quantity - 1;\r\n                return {\r\n                  ...item,\r\n                  quantity: newQty,\r\n                  total_item_price: newQty * item.price\r\n                };\r\n              }\r\n              return item;\r\n            });\r\n  \r\n            const newTotalPrice = updatedCartItems.reduce((acc, item) => acc + item.total_item_price, 0);\r\n            const newTaxes = newTotalPrice * 0.18;\r\n            const newGrandTotal = newTotalPrice + newTaxes + state.deliverCharges;\r\n  \r\n            return {\r\n              ...state,\r\n              cartItems: updatedCartItems,\r\n              totalPrice: newTotalPrice,\r\n              taxes: newTaxes,\r\n              grandTotal: newGrandTotal,\r\n            };\r\n          }\r\n// ====\r\n          case 'LOAD_CART_FROM_DB':\r\n\r\n  return { ...action.payload };\r\n  \r\n    }\r\n\r\n};\r\n\r\nexport default cartReducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}