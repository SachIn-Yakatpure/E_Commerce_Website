{"ast":null,"code":"import axios from \"axios\";\nimport { loadUserCart } from \"./cartActions\";\nimport { saveUserCart } from \"./cartActions\";\nexport const loginUser = formData => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.post(\"http://localhost:7000/login\", formData, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: \"USER_LOGIN_SUCCESS\",\n      payload: data\n    });\n\n    // Save userInfo (with token) to localStorage\n    localStorage.setItem('userInfo', JSON.stringify(data));\n\n    // Load user cart from DB\n    dispatch(loadUserCart());\n  } catch (error) {\n    console.error(\"Login error:\", error);\n  }\n};\nexport const logout = () => async (dispatch, getState) => {\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState();\n\n  // Save cart to backend before logout\n  await dispatch(saveUserCart());\n\n  // Clear localStorage and Redux\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartState');\n  dispatch({\n    type: 'USER_LOGOUT'\n  });\n  dispatch({\n    type: 'CLEAR_CART'\n  });\n};","map":{"version":3,"names":["axios","loadUserCart","saveUserCart","loginUser","formData","dispatch","data","post","headers","type","payload","localStorage","setItem","JSON","stringify","error","console","logout","getState","cart","cartItems","removeItem"],"sources":["D:/Sachin/Project/E-Commerce Project/frontend/src/actions/userActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { loadUserCart } from \"./cartActions\"; \r\nimport { saveUserCart } from \"./cartActions\";\r\n\r\nexport const loginUser = (formData) => async (dispatch) => {\r\n  try {\r\n    const { data } = await axios.post(\"http://localhost:7000/login\", formData, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n\r\n    dispatch({ type: \"USER_LOGIN_SUCCESS\", payload: data });\r\n\r\n    // Save userInfo (with token) to localStorage\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n\r\n    // Load user cart from DB\r\n    dispatch(loadUserCart());\r\n  } catch (error) {\r\n    console.error(\"Login error:\", error);\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const logout = () => async (dispatch, getState) => {\r\n  const { cart: { cartItems } } = getState();\r\n\r\n  // Save cart to backend before logout\r\n  await dispatch(saveUserCart());\r\n\r\n  // Clear localStorage and Redux\r\n  localStorage.removeItem('userInfo');\r\n  localStorage.removeItem('cartState');\r\n\r\n  dispatch({ type: 'USER_LOGOUT' });\r\n  dispatch({ type: 'CLEAR_CART' });\r\n};\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,YAAY,QAAQ,eAAe;AAE5C,OAAO,MAAMC,SAAS,GAAIC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EACzD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,6BAA6B,EAAEH,QAAQ,EAAE;MACzEI,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IAEFH,QAAQ,CAAC;MAAEI,IAAI,EAAE,oBAAoB;MAAEC,OAAO,EAAEJ;IAAK,CAAC,CAAC;;IAEvD;IACAK,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,CAAC;;IAEtD;IACAD,QAAQ,CAACJ,YAAY,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOc,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;EACtC;AACF,CAAC;AAID,OAAO,MAAME,MAAM,GAAGA,CAAA,KAAM,OAAOZ,QAAQ,EAAEa,QAAQ,KAAK;EACxD,MAAM;IAAEC,IAAI,EAAE;MAAEC;IAAU;EAAE,CAAC,GAAGF,QAAQ,CAAC,CAAC;;EAE1C;EACA,MAAMb,QAAQ,CAACH,YAAY,CAAC,CAAC,CAAC;;EAE9B;EACAS,YAAY,CAACU,UAAU,CAAC,UAAU,CAAC;EACnCV,YAAY,CAACU,UAAU,CAAC,WAAW,CAAC;EAEpChB,QAAQ,CAAC;IAAEI,IAAI,EAAE;EAAc,CAAC,CAAC;EACjCJ,QAAQ,CAAC;IAAEI,IAAI,EAAE;EAAa,CAAC,CAAC;AAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}