{"ast":null,"code":"import axios from \"axios\";\n\n// ==== Action Creators ====\n\nexport const saveUserCart = () => async (dispatch, getState) => {\n  const {\n    cart: {\n      cartItems\n    },\n    userLogin: {\n      userInfo\n    }\n  } = getState();\n  console.log(\"üõí saveUserCart triggered\", {\n    userInfo,\n    cartItems\n  });\n  if (!userInfo || userInfo.success === false) {\n    console.warn(\"üö´ Aborting saveUserCart: user not logged in or login failed.\");\n    return;\n  }\n  const invalidItems = cartItems.filter(item => !(item.productId || item.id) || typeof item.qty !== 'number');\n  if (invalidItems.length > 0) {\n    console.warn('‚ö†Ô∏è Found invalid cart items, skipping:', invalidItems);\n  }\n  const transformedCart = cartItems.filter(item => (item.productId || item.id) && typeof item.qty === 'number').map(item => ({\n    ...item,\n    productId: item.productId || item._id || item.id,\n    qty: Math.max(1, Number(item.qty)) // ensuring qty is a number >= 1\n  }));\n  console.log(\"üì§ Sending to backend:\", transformedCart);\n\n  // Allow saving empty cart\n  if (transformedCart.length === 0) {\n    console.warn(\"‚ö†Ô∏è Cart is empty. Will save empty cart to backend.\");\n  }\n  try {\n    await axios.post(\"http://localhost:7000/api/cart/save\", {\n      cartItems: transformedCart\n    }, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    console.log(\"‚úÖ Cart saved:\", transformedCart);\n  } catch (error) {\n    console.error(\"‚ùå Error saving cart to backend:\", error);\n  }\n};\n\n// Load the user's cart from the backend\n\nexport const loadUserCart = userInfo => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(\"http://localhost:7000/api/cart\", {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    console.log(\"üõí Loaded cart from DB:\", data.cartItems);\n    const cartItemsWithId = (data.cartItems || []).map(item => ({\n      ...item,\n      id: item.id || item._id\n    }));\n    dispatch({\n      type: \"LOAD_CART_FROM_DB\",\n      payload: cartItemsWithId\n    });\n\n    // ‚úÖ Log Redux state after dispatch\n    setTimeout(() => {\n      const reduxCart = getState().cart.cartItems;\n      console.log(\"‚úÖ Redux cartItems after LOAD_CART_FROM_DB:\", reduxCart);\n    }, 300);\n  } catch (error) {\n    console.error(\"‚ùå Failed to load user cart:\", error);\n  }\n};\n\n// ==== Cart Manipulation Actions ====\n\nexport const addToCart = item => async dispatch => {\n  dispatch({\n    type: 'ADD_TO_CART',\n    payload: item\n  });\n  dispatch(saveUserCart());\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: 'REMOVE_FROM_CART',\n    payload: id\n  });\n  const {\n    cart\n  } = getState();\n  const {\n    userLogin: {\n      userInfo\n    }\n  } = getState();\n  if (userInfo) {\n    dispatch(saveUserCart()); // Save updated cart to backend\n  }\n};\nexport const incrementCartCounter = id => async dispatch => {\n  dispatch({\n    type: 'INCREMENT_CART_COUNTER',\n    payload: id\n  });\n  dispatch(saveUserCart());\n};\nexport const decrementCartCounter = id => async dispatch => {\n  dispatch({\n    type: 'DECREMENT_CART_COUNTER',\n    payload: id\n  });\n  dispatch(saveUserCart());\n};\nexport const clearCart = () => async (dispatch, getState) => {\n  const {\n    userLogin: {\n      userInfo\n    }\n  } = getState();\n  if (userInfo) {\n    try {\n      await axios.post(\"http://localhost:7000/api/cart/clear\", {}, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      console.log(\"üßπ Cleared cart in MongoDB for user:\", userInfo);\n    } catch (error) {\n      console.error(\"‚ùå Error clearing cart in backend:\", error);\n    }\n  }\n  dispatch({\n    type: 'CLEAR_CART'\n  });\n\n  // ‚úÖ Clear localStorage cartItems too\n  localStorage.removeItem('cartItems');\n  console.log(\"üßπ Cleared localStorage cartItems\");\n};","map":{"version":3,"names":["axios","saveUserCart","dispatch","getState","cart","cartItems","userLogin","userInfo","console","log","success","warn","invalidItems","filter","item","productId","id","qty","length","transformedCart","map","_id","Math","max","Number","post","headers","Authorization","token","error","loadUserCart","data","get","cartItemsWithId","type","payload","setTimeout","reduxCart","addToCart","removeFromCart","incrementCartCounter","decrementCartCounter","clearCart","localStorage","removeItem"],"sources":["D:/Sachin/Project/E-Commerce Project/frontend/src/actions/cartActions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// ==== Action Creators ====\r\n\r\nexport const saveUserCart = () => async (dispatch, getState) => {\r\n  const {\r\n    cart: { cartItems },\r\n    userLogin: { userInfo }\r\n  } = getState();\r\n\r\n  console.log(\"üõí saveUserCart triggered\", { userInfo, cartItems });\r\n\r\n  if (!userInfo || userInfo.success === false) {\r\n    console.warn(\"üö´ Aborting saveUserCart: user not logged in or login failed.\");\r\n    return;\r\n  }\r\n\r\n  const invalidItems = cartItems.filter(item => !(item.productId || item.id) || typeof item.qty !== 'number');\r\n  if (invalidItems.length > 0) {\r\n    console.warn('‚ö†Ô∏è Found invalid cart items, skipping:', invalidItems);\r\n  }\r\n\r\n  const transformedCart = cartItems\r\n    .filter(item => (item.productId || item.id) && typeof item.qty === 'number')\r\n    .map(item => ({\r\n      ...item,\r\n      productId: item.productId || item._id || item.id, \r\n      qty: Math.max(1, Number(item.qty)), // ensuring qty is a number >= 1\r\n    }));\r\n\r\n    console.log(\"üì§ Sending to backend:\", transformedCart);\r\n\r\n  // Allow saving empty cart\r\n  if (transformedCart.length === 0) {\r\n    console.warn(\"‚ö†Ô∏è Cart is empty. Will save empty cart to backend.\");\r\n  }\r\n\r\n  \r\n  try {\r\n    await axios.post(\r\n      \"http://localhost:7000/api/cart/save\",\r\n      { cartItems: transformedCart },\r\n      {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      }\r\n    );\r\n\r\n    console.log(\"‚úÖ Cart saved:\", transformedCart);\r\n  } catch (error) {\r\n    console.error(\"‚ùå Error saving cart to backend:\", error);\r\n  }\r\n};\r\n\r\n// Load the user's cart from the backend\r\n\r\nexport const loadUserCart = (userInfo) => async (dispatch, getState) => {\r\n  try {\r\n    const { data } = await axios.get(\"http://localhost:7000/api/cart\", {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    });\r\n\r\n    console.log(\"üõí Loaded cart from DB:\", data.cartItems);\r\n\r\n    const cartItemsWithId = (data.cartItems || []).map(item => ({\r\n      ...item,\r\n      id: item.id || item._id,\r\n    }));\r\n\r\n    dispatch({ type: \"LOAD_CART_FROM_DB\", payload: cartItemsWithId });\r\n\r\n    // ‚úÖ Log Redux state after dispatch\r\n    setTimeout(() => {\r\n      const reduxCart = getState().cart.cartItems;\r\n      console.log(\"‚úÖ Redux cartItems after LOAD_CART_FROM_DB:\", reduxCart);\r\n    }, 300);\r\n\r\n  } catch (error) {\r\n    console.error(\"‚ùå Failed to load user cart:\", error);\r\n  }\r\n};\r\n\r\n\r\n// ==== Cart Manipulation Actions ====\r\n\r\nexport const addToCart = (item) => async (dispatch) => {\r\n  dispatch({ type: 'ADD_TO_CART', payload: item });\r\n  dispatch(saveUserCart());\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({ type: 'REMOVE_FROM_CART', payload: id });\r\n\r\n  const { cart } = getState();\r\n  const { userLogin: { userInfo } } = getState();\r\n\r\n  if (userInfo) {\r\n    dispatch(saveUserCart()); // Save updated cart to backend\r\n  }\r\n};\r\n\r\n\r\nexport const incrementCartCounter = (id) => async (dispatch) => {\r\n  dispatch({ type: 'INCREMENT_CART_COUNTER', payload: id });\r\n  dispatch(saveUserCart());\r\n};\r\n\r\nexport const decrementCartCounter = (id) => async (dispatch) => {\r\n  dispatch({ type: 'DECREMENT_CART_COUNTER', payload: id });\r\n  dispatch(saveUserCart());\r\n};\r\n\r\nexport const clearCart = () => async (dispatch, getState) => {\r\n  const { userLogin: { userInfo } } = getState();\r\n\r\n  if (userInfo) {\r\n    try {\r\n      await axios.post(\"http://localhost:7000/api/cart/clear\", {}, {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      });\r\n      console.log(\"üßπ Cleared cart in MongoDB for user:\", userInfo);\r\n    } catch (error) {\r\n      console.error(\"‚ùå Error clearing cart in backend:\", error);\r\n    }\r\n  }\r\n\r\n  dispatch({ type: 'CLEAR_CART' });\r\n\r\n  // ‚úÖ Clear localStorage cartItems too\r\n  localStorage.removeItem('cartItems');\r\n  console.log(\"üßπ Cleared localStorage cartItems\");\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}