{"ast":null,"code":"import axios from \"axios\";\n\n// ==== Action Creators ====\n\nlet saveUserCartTimeout;\nexport const saveUserCart = () => async (dispatch, getState) => {\n  clearTimeout(saveUserCartTimeout);\n  saveUserCartTimeout = setTimeout(async () => {\n    const {\n      cart: {\n        cartItems\n      },\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    console.log(\"🛒 saveUserCart triggered\", {\n      userInfo,\n      cartItems\n    });\n    if (!userInfo || userInfo.success === false) {\n      console.warn(\"🚫 Aborting saveUserCart: user not logged in or login failed.\");\n      return;\n    }\n    const invalidItems = cartItems.filter(item => !(item.productId || item.id) || typeof item.qty !== 'number');\n    if (invalidItems.length > 0) {\n      console.warn('⚠️ Found invalid cart items, skipping:', invalidItems);\n    }\n    const transformedCart = cartItems.filter(item => (item.productId || item.id) && typeof item.qty === 'number').map(item => ({\n      ...item,\n      productId: item.productId || item._id || item.id,\n      qty: Math.max(1, Number(item.qty)) // ensuring qty is a number >= 1\n    }));\n    console.log(\"📤 Sending to backend:\", transformedCart);\n\n    // Allow saving empty cart\n    if (transformedCart.length === 0) {\n      console.warn(\"⚠️ Cart is empty. Will save empty cart to backend.\");\n    }\n    try {\n      const response = await axios.post(\"http://localhost:7000/api/cart/save\", {\n        cartItems: transformedCart\n      }, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      console.log(\"✅ Cart saved:\", transformedCart);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMsg = (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Unknown error\";\n      console.error(\"❌ Error saving cart to backend:\", errorMsg);\n      alert(`🛑 Cart update failed: ${errorMsg}`);\n    }\n  }, 300); // debounce delay in milliseconds\n};\n\n// Load the user's cart from the backend\n\nexport const loadUserCart = userInfo => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(\"http://localhost:7000/api/cart\", {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    console.log(\"🛒 Loaded cart from DB:\", data.cartItems);\n    const cartItemsWithCountInStock = (data.cartItems || []).map(item => ({\n      ...item,\n      countInStock: item.currentQuantity,\n      // <-- add this line to map quantity\n      id: item.id || item._id\n    }));\n    dispatch({\n      type: \"LOAD_CART_FROM_DB\",\n      payload: cartItemsWithCountInStock\n    });\n  } catch (error) {\n    console.error(\"❌ Failed to load user cart:\", error);\n  }\n};\n\n// ==== Cart Manipulation Actions ====\n\nexport const addToCart = item => async dispatch => {\n  dispatch({\n    type: 'ADD_TO_CART',\n    payload: item\n  });\n  dispatch(saveUserCart());\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: 'REMOVE_FROM_CART',\n    payload: id\n  });\n  const {\n    cart\n  } = getState();\n  const {\n    userLogin: {\n      userInfo\n    }\n  } = getState();\n  if (userInfo) {\n    dispatch(saveUserCart()); // Save updated cart to backend\n  }\n};\nexport const incrementCartCounter = id => async dispatch => {\n  dispatch({\n    type: 'INCREMENT_CART_COUNTER',\n    payload: id\n  });\n  dispatch(saveUserCart());\n};\nexport const decrementCartCounter = id => async dispatch => {\n  dispatch({\n    type: 'DECREMENT_CART_COUNTER',\n    payload: id\n  });\n  dispatch(saveUserCart());\n};\nexport const clearCart = () => async dispatch => {\n  // ✅ Just clear Redux and localStorage — backend already cleared via Stripe webhook\n  dispatch({\n    type: 'CLEAR_CART'\n  });\n  localStorage.removeItem('cartItems');\n  console.log('🧹 Cleared localStorage cartItems and Redux cart');\n};","map":{"version":3,"names":["axios","saveUserCartTimeout","saveUserCart","dispatch","getState","clearTimeout","setTimeout","cart","cartItems","userLogin","userInfo","console","log","success","warn","invalidItems","filter","item","productId","id","qty","length","transformedCart","map","_id","Math","max","Number","response","post","headers","Authorization","token","error","_error$response","_error$response$data","errorMsg","data","message","alert","loadUserCart","get","cartItemsWithCountInStock","countInStock","currentQuantity","type","payload","addToCart","removeFromCart","incrementCartCounter","decrementCartCounter","clearCart","localStorage","removeItem"],"sources":["E:/New folder/E_Commerce_Website/frontend/src/actions/cartActions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// ==== Action Creators ====\r\n\r\nlet saveUserCartTimeout;\r\n\r\nexport const saveUserCart = () => async (dispatch, getState) => {\r\n  clearTimeout(saveUserCartTimeout);\r\n\r\n  saveUserCartTimeout = setTimeout(async () => {\r\n    const {\r\n      cart: { cartItems },\r\n      userLogin: { userInfo }\r\n    } = getState();\r\n\r\n    console.log(\"🛒 saveUserCart triggered\", { userInfo, cartItems });\r\n\r\n    if (!userInfo || userInfo.success === false) {\r\n      console.warn(\"🚫 Aborting saveUserCart: user not logged in or login failed.\");\r\n      return;\r\n    }\r\n\r\n    const invalidItems = cartItems.filter(item => !(item.productId || item.id) || typeof item.qty !== 'number');\r\n    if (invalidItems.length > 0) {\r\n      console.warn('⚠️ Found invalid cart items, skipping:', invalidItems);\r\n    }\r\n\r\n    const transformedCart = cartItems\r\n      .filter(item => (item.productId || item.id) && typeof item.qty === 'number')\r\n      .map(item => ({\r\n        ...item,\r\n        productId: item.productId || item._id || item.id,\r\n        qty: Math.max(1, Number(item.qty)), // ensuring qty is a number >= 1\r\n      }));\r\n\r\n    console.log(\"📤 Sending to backend:\", transformedCart);\r\n\r\n    // Allow saving empty cart\r\n    if (transformedCart.length === 0) {\r\n      console.warn(\"⚠️ Cart is empty. Will save empty cart to backend.\");\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:7000/api/cart/save\",\r\n        { cartItems: transformedCart },\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n\r\n      console.log(\"✅ Cart saved:\", transformedCart);\r\n    } catch (error) {\r\n      const errorMsg = error?.response?.data?.message || \"Unknown error\";\r\n      console.error(\"❌ Error saving cart to backend:\", errorMsg);\r\n      alert(`🛑 Cart update failed: ${errorMsg}`);\r\n    }\r\n  }, 300); // debounce delay in milliseconds\r\n};\r\n\r\n\r\n// Load the user's cart from the backend\r\n\r\nexport const loadUserCart = (userInfo) => async (dispatch, getState) => {\r\n  try {\r\n    const { data } = await axios.get(\"http://localhost:7000/api/cart\", {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    });\r\n\r\n    console.log(\"🛒 Loaded cart from DB:\", data.cartItems);\r\n\r\n    const cartItemsWithCountInStock = (data.cartItems || []).map(item => ({\r\n      ...item,\r\n      countInStock: item.currentQuantity,  // <-- add this line to map quantity\r\n      id: item.id || item._id,\r\n    }));\r\n\r\n    dispatch({ type: \"LOAD_CART_FROM_DB\", payload: cartItemsWithCountInStock });\r\n\r\n  } catch (error) {\r\n    console.error(\"❌ Failed to load user cart:\", error);\r\n  }\r\n};\r\n\r\n\r\n\r\n// ==== Cart Manipulation Actions ====\r\n\r\nexport const addToCart = (item) => async (dispatch) => {\r\n  dispatch({ type: 'ADD_TO_CART', payload: item });\r\n  dispatch(saveUserCart());\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({ type: 'REMOVE_FROM_CART', payload: id });\r\n\r\n  const { cart } = getState();\r\n  const { userLogin: { userInfo } } = getState();\r\n\r\n  if (userInfo) {\r\n    dispatch(saveUserCart()); // Save updated cart to backend\r\n  }\r\n};\r\n\r\n\r\nexport const incrementCartCounter = (id) => async (dispatch) => {\r\n  dispatch({ type: 'INCREMENT_CART_COUNTER', payload: id });\r\n  dispatch(saveUserCart());\r\n};\r\n\r\nexport const decrementCartCounter = (id) => async (dispatch) => {\r\n  dispatch({ type: 'DECREMENT_CART_COUNTER', payload: id });\r\n  dispatch(saveUserCart());\r\n};\r\n\r\nexport const clearCart = () => async (dispatch) => {\r\n  // ✅ Just clear Redux and localStorage — backend already cleared via Stripe webhook\r\n  dispatch({ type: 'CLEAR_CART' });\r\n  localStorage.removeItem('cartItems');\r\n  console.log('🧹 Cleared localStorage cartItems and Redux cart');\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}