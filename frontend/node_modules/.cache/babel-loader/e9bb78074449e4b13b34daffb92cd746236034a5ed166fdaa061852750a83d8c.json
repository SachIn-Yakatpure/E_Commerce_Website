{"ast":null,"code":"import axios from \"axios\";\n\n// ==== Action Creators ====\n\nexport const saveUserCart = () => async (dispatch, getState) => {\n  const {\n    cart: {\n      cartItems\n    },\n    userLogin: {\n      userInfo\n    }\n  } = getState();\n  console.log(\"🛒 saveUserCart triggered\", {\n    userInfo,\n    cartItems\n  });\n  if (!userInfo) return;\n  try {\n    // ✅ Convert array into an array of { productId: quantity }\n    const transformedCart = cartItems.map(item => ({\n      productId: item._id,\n      quantity: item.quantity\n    }));\n\n    // Validate transformedCart: Ensure every item has valid productId and quantity > 0\n    if (transformedCart.some(item => !item.productId || item.quantity <= 0)) {\n      console.error('Cart items are missing productId or have invalid quantity');\n      return; // Prevent sending invalid data\n    }\n\n    // Send the transformed cart to backend\n    await axios.post(\"http://localhost:7000/api/cart/save\", {\n      cartItems: transformedCart\n    },\n    // Send as an array of objects\n    {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    console.log(\"✅ Cart saved:\", transformedCart);\n  } catch (error) {\n    console.error(\"❌ Error saving cart to backend:\", error);\n  }\n};\n\n// Load the user's cart from backend\n\nexport const loadUserCart = userInfo => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(\"http://localhost:7000/getcart\", {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    console.log(\"🛒 Loaded cart from DB:\", data);\n    dispatch({\n      type: \"LOAD_CART_FROM_DB\",\n      payload: data\n    });\n  } catch (error) {\n    console.error(\"❌ Failed to load user cart:\", error);\n  }\n};\n\n// ==== Cart Manipulation Actions ====\n\nexport const addToCart = item => async dispatch => {\n  dispatch({\n    type: 'ADD_TO_CART',\n    payload: item\n  });\n  dispatch(saveUserCart());\n};\nexport const removeFromCart = item => async dispatch => {\n  dispatch({\n    type: 'REMOVE_FROM_CART',\n    payload: item\n  });\n  dispatch(saveUserCart());\n};\nexport const incrementCartCounter = id => async dispatch => {\n  dispatch({\n    type: 'INCREMENT_CART_COUNTER',\n    payload: id\n  });\n  dispatch(saveUserCart());\n};\nexport const decrementCartCounter = id => async dispatch => {\n  dispatch({\n    type: 'DECREMENT_CART_COUNTER',\n    payload: id\n  });\n  dispatch(saveUserCart());\n};\nexport const clearCart = () => async (dispatch, getState) => {\n  const {\n    userLogin: {\n      userInfo\n    }\n  } = getState();\n  if (userInfo) {\n    try {\n      await axios.post(\"/api/cart/clear\", {}, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n    } catch (error) {\n      console.error(\"Error clearing cart in the backend:\", error);\n    }\n  }\n  dispatch({\n    type: 'CLEAR_CART'\n  });\n};","map":{"version":3,"names":["axios","saveUserCart","dispatch","getState","cart","cartItems","userLogin","userInfo","console","log","transformedCart","map","item","productId","_id","quantity","some","error","post","headers","Authorization","token","loadUserCart","data","get","type","payload","addToCart","removeFromCart","incrementCartCounter","id","decrementCartCounter","clearCart"],"sources":["D:/Sachin/Project/E-Commerce Project/frontend/src/actions/cartActions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// ==== Action Creators ====\r\n\r\nexport const saveUserCart = () => async (dispatch, getState) => {\r\n  const {\r\n    cart: { cartItems },\r\n    userLogin: { userInfo }\r\n  } = getState();\r\n\r\n  console.log(\"🛒 saveUserCart triggered\", { userInfo, cartItems });\r\n\r\n  if (!userInfo) return;\r\n\r\n  try {\r\n    // ✅ Convert array into an array of { productId: quantity }\r\n    const transformedCart = cartItems.map(item => ({\r\n      productId: item._id,\r\n      quantity: item.quantity,\r\n    }));\r\n\r\n    // Validate transformedCart: Ensure every item has valid productId and quantity > 0\r\n    if (transformedCart.some(item => !item.productId || item.quantity <= 0)) {\r\n      console.error('Cart items are missing productId or have invalid quantity');\r\n      return;  // Prevent sending invalid data\r\n    }\r\n\r\n    // Send the transformed cart to backend\r\n    await axios.post(\"http://localhost:7000/api/cart/save\", \r\n      { cartItems: transformedCart },  // Send as an array of objects\r\n      {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      }\r\n    );\r\n\r\n    console.log(\"✅ Cart saved:\", transformedCart);\r\n  } catch (error) {\r\n    console.error(\"❌ Error saving cart to backend:\", error);\r\n  }\r\n};\r\n\r\n\r\n// Load the user's cart from backend\r\n\r\nexport const loadUserCart = (userInfo) => async (dispatch) => {\r\n  try {\r\n    const { data } = await axios.get(\"http://localhost:7000/getcart\", {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    });\r\n\r\n    console.log(\"🛒 Loaded cart from DB:\", data);\r\n\r\n    dispatch({ type: \"LOAD_CART_FROM_DB\", payload: data });\r\n  } catch (error) {\r\n    console.error(\"❌ Failed to load user cart:\", error);\r\n  }\r\n};\r\n\r\n\r\n// ==== Cart Manipulation Actions ====\r\n\r\nexport const addToCart = (item) => async (dispatch) => {\r\n  dispatch({ type: 'ADD_TO_CART', payload: item });\r\n  dispatch(saveUserCart());\r\n};\r\n\r\nexport const removeFromCart = (item) => async (dispatch) => {\r\n  dispatch({ type: 'REMOVE_FROM_CART', payload: item });\r\n  dispatch(saveUserCart());\r\n};\r\n\r\nexport const incrementCartCounter = (id) => async (dispatch) => {\r\n  dispatch({ type: 'INCREMENT_CART_COUNTER', payload: id });\r\n  dispatch(saveUserCart());\r\n};\r\n\r\nexport const decrementCartCounter = (id) => async (dispatch) => {\r\n  dispatch({ type: 'DECREMENT_CART_COUNTER', payload: id });\r\n  dispatch(saveUserCart());\r\n};\r\n\r\nexport const clearCart = () => async (dispatch, getState) => {\r\n  const { userLogin: { userInfo } } = getState();\r\n\r\n  if (userInfo) {\r\n    try {\r\n      await axios.post(\"/api/cart/clear\", {}, {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error clearing cart in the backend:\", error);\r\n    }\r\n  }\r\n\r\n  dispatch({ type: 'CLEAR_CART' });\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}